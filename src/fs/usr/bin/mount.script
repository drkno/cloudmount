#!/bin/bash

. "/usr/bin/variables"

wait_for_mount() {
    sleep 5
    while [ -z "$(ls -A ${1})" ]
    do
        echo "Waiting for mount ${1} ..."
        sleep 30
    done
}

perform_mount() {
    mount_point="${1}"
    shift
    echo "Mounting ${mount_point}"
    $@ "${mount_point}" &

    wait_for_mount "${mount_point}"
}

mount_rclone () {
    perform_mount "${RCLONE_MOUNT}" rclone mount \
        `# Rclone Options` \
        "--config=${RCLONE_CONFIG_FILE}" \
        --user-agent "cloudmount/1.0" \
        --buffer-size "${BUFFER_SIZE}" \
        --checkers "${CHECKERS}" \
        --uid "${PUID}" \
        --gid "${PGID}" \
        --umask 002 \
        --use-mmap \
        \
        `# Fuse Options` \
        --allow-non-empty \
        --allow-other \
        \
        `# RCD, expected to be run **behind an SSO**` \
        --rc \
        --rc-no-auth \
        --rc-web-gui \
        --rc-web-gui-no-open-browser \
        --rc-addr "0.0.0.0:5572" \
        \
        `# VFS` \
        --cache-dir "${RCLONE_CACHE}" \
        --dir-cache-time "${DIR_CACHE_MAX_AGE}" \
        --max-read-ahead "${MAX_READ_AHEAD}" \
        --poll-interval 1m \
        --vfs-read-chunk-size "${READ_CHUNK_SIZE}" \
        --vfs-cache-poll-interval 1h \
        --vfs-cache-mode full \
        --vfs-cache-max-age "${CACHE_MAX_AGE}" \
        --vfs-cache-max-size "${MAX_CACHE_FILES}" \
        --vfs-read-ahead "${READ_AHEAD_SIZE}" \
        \
        `# Performance` \
        --no-modtime \
        --no-checksum \
        --transfers "${MAX_TRANSFERS}" \
        \
        `# Mount` \
        --read-only "${RCLONE_ENDPOINT}"
}

mount_union () {
    perform_mount "${MOUNT_DIR}" unionfs -o uid=${PUID} -o gid=${PGID} -o cow,allow_other,direct_io,nonempty,auto_cache,sync_read "${UPLOAD_QUEUE}=RW:${RCLONE_MOUNT}=RO"
}

if pidof -o %PPID -x "$(basename "$0")"; then
    echo "Mount already in progress. Aborting."
else
    mount_rclone
    mount_union
fi

check

exit 0
