#!/bin/bash

. "/usr/bin/variables"

wait_for_mount() {
    sleep 5
    while [ -z "$(ls -A ${1})" ]
    do
        echo "Waiting for mount ${1} ..."
        sleep 30
    done
}

perform_mount() {
    mount_point="${1}"
    shift
    echo "Mounting ${mount_point}"
    $@ "${mount_point}" &

    wait_for_mount "${mount_point}"
}

mount_plexdrive () {
    perform_mount "${PLEXDRIVE_MOUNT}" plexdrive mount $PLEXDRIVE_OPTIONS
}

mount_rclone () {
    perform_mount "${RCLONE_MOUNT}" rclone mount "--config=${RCLONE_CONFIG_FILE}" --vfs-cache-mode full --vfs-read-ahead "${BUFFER_SIZE}" --buffer-size "${BUFFER_SIZE}" --checkers "${CHECKERS}" --allow-non-empty --allow-other --max-read-ahead --no-modtime "${MAX_READ_AHEAD}" --uid "${PUID}" --gid "${PGID}" --read-only "${RCLONE_LOCAL_ENDPOINT}"
}

mount_union () {
    perform_mount "${MOUNT_DIR}" unionfs -o uid=${PUID} -o gid=${PGID} -o cow,allow_other,direct_io,nonempty,auto_cache,sync_read "${UPLOAD_QUEUE}=RW:${RCLONE_MOUNT}=RO"
}

if pidof -o %PPID -x "$(basename "$0")"; then
    echo "Mount already in progress. Aborting."
else
    mount_plexdrive
    mount_rclone
    mount_union
fi

check

exit 0
